---
import { SITE } from "@consts";

const links = [
  { name: "Home", href: "/", target: "_self" },
  { name: "About", href: "/about", target: "_self" },
  { name: "Work", href: "/projects", target: "_self" },
  { name: "Blog", href: "/blog", target: "_self" },
  { name: "Contact", href: "/contact", target: "_self" },
];
---

<header class="fixed top-0 w-full z-50">
  <div class="container mx-auto flex items-center justify-between p-4 bg-background/90 backdrop-blur-sm rounded-b-2xl mx-4 shadow-sm header-glow">
    <a href="/" class="font-bold font-plex text-4xl"
      >{SITE.TITLE.toUpperCase().charAt(0)}.</a
    >
    <div class="flex items-center space-x-4">
      <nav class="space-x-3 text-secondary hidden md:block">
        {
          links.map((link) => (
            <a
              href={link.href}
              class="hover:border-b-2 hover:border-dashed hover:border-secondary pb-0.5"
            >
              {link.name}
            </a>
          ))
        }
      </nav>
      <button
        id="theme-toggle"
        class="p-2 rounded-lg hover:bg-secondary/20 transition-colors"
        aria-label="Toggle theme"
      >
        <svg id="sun-icon" class="w-5 h-5 text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
        </svg>
        <svg id="moon-icon" class="w-5 h-5 text-secondary hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
        </svg>
      </button>
      <button
        id="menu-toggle"
        class="hamburger focus:outline-none flex md:hidden"
        aria-label="Toggle navigation"
      >
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
    </div>
  </div>
  <div
    id="menu-mobile"
    class="hidden md:hidden space-x-3 text-secondary bg-background backdrop-blur-2xl w-screen p-4"
  >
    <nav class="flex flex-col gap-4 text-2xl">
      {
        links.map((link) => (
          <a
            href={link.href}
            class="hover:border-b-2 hover:border-dashed hover:border-secondary pb-0.5"
          >
            {link.name}
          </a>
        ))
      }
    </nav>
  </div>
</header>

<style>
  .hamburger {
    gap: 5px;
    cursor: pointer;
    position: relative;
    width: 24px;
    height: 21px;
    padding: 0;
    border: 0;
    background: transparent;
  }

  .hamburger-line {
    width: 24px;
    height: 3px;
    background-color: var(--color-secondary, #000000);
    transition: all 0.3s ease;
    position: absolute;
    left: 0;
  }

  .hamburger-line:nth-child(1) {
    top: 0;
  }

  .hamburger-line:nth-child(2) {
    top: 9px;
  }

  .hamburger-line:nth-child(3) {
    top: 18px;
  }

  .hamburger.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg);
    top: 9px;
  }

  .hamburger.active .hamburger-line:nth-child(2) {
    display: none;
    opacity: 0;
  }

  .hamburger.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg);
    top: 9px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuMobile = document.getElementById("menu-mobile");
    const toggle = document.getElementById("menu-toggle");
    const themeToggle = document.getElementById("theme-toggle");
    const sunIcon = document.getElementById("sun-icon");
    const moonIcon = document.getElementById("moon-icon");
    
    // Mobile menu toggle
    toggle?.addEventListener("click", () => {
      menuMobile?.classList.toggle("hidden");
      toggle.classList.toggle("active");
      const expanded = toggle.classList.contains("active");
      toggle.setAttribute("aria-expanded", String(expanded));
    });

            // Theme toggle
            const currentTheme = localStorage.getItem("theme") || "light";
            document.documentElement.setAttribute("data-theme", currentTheme);
            
            if (currentTheme === "light") {
              sunIcon?.classList.add("hidden");
              moonIcon?.classList.remove("hidden");
            }

    themeToggle?.addEventListener("click", () => {
      const currentTheme = document.documentElement.getAttribute("data-theme");
      const newTheme = currentTheme === "dark" ? "light" : "dark";
      
      document.documentElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
      
      if (newTheme === "light") {
        sunIcon?.classList.add("hidden");
        moonIcon?.classList.remove("hidden");
      } else {
        sunIcon?.classList.remove("hidden");
        moonIcon?.classList.add("hidden");
      }
    });
  });
</script>
